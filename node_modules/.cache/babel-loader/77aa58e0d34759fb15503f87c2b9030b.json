{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/siddhartha/sid/projects/react/calculator/src/App.js\";\nimport React, { Component } from 'react';\nimport Buttons from \"./components/Buttons\";\nimport './css/style.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reset = () => {\n      this.setState({\n        result: '0'\n      });\n    };\n\n    this.addToCurrent = symbol => {\n      //console.log(symbol);\n      if ([\"/\", \"+\", \"-\", \"*\"].indexOf(symbol) > -1 && nextIsReset == false) {\n        let {\n          previous\n        } = this.state;\n        previous.push(this.state.result + symbol);\n        this.setState({\n          previous,\n          nextIsReset: true\n        });\n      } else {\n        if (this.state.result === \"0\" && symbol !== \".\") {\n          this.setState({\n            result: symbol\n          });\n        } else {\n          this.setState({\n            result: this.state.result + symbol\n          });\n          this.setState({\n            nextIsReset: true\n          });\n        }\n      }\n    };\n\n    this.state = {\n      result: '0',\n      previous: [],\n      nextIsReset: false\n    };\n  }\n\n  render() {\n    const buttons = [{\n      symbol: 'C',\n      cols: 3,\n      action: this.reset\n    }, {\n      symbol: '/',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '7',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '8',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '9',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '*',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '4',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '5',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '6',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '-',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '1',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '2',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '3',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '+',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '0',\n      cols: 2,\n      action: this.addToCurrent\n    }, {\n      symbol: '.',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '=',\n      cols: 1,\n      action: this.addToCurrent\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [\" \", this.state.previous.length > 0 ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"previous\",\n        type: \"text\",\n        value: this.state.previous[this.state.previous.length - 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this) : null, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"result\",\n        type: \"text\",\n        value: this.state.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this), \" \", buttons.map((btn, i) => {\n        return /*#__PURE__*/_jsxDEV(Buttons, {\n          symbol: btn.symbol,\n          cols: btn.cols,\n          action: symbol => btn.action(symbol)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 28\n        }, this);\n      }), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 18\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/siddhartha/sid/projects/react/calculator/src/App.js"],"names":["React","Component","Buttons","App","constructor","props","reset","setState","result","addToCurrent","symbol","indexOf","nextIsReset","previous","state","push","render","buttons","cols","action","length","map","btn","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Buttons from \"./components/Buttons\"\nimport './css/style.css'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: '0',\n            previous: [],\n            nextIsReset: false\n        }\n\n    }\n\n    reset = () => {\n        this.setState({ result: '0' });\n    }\n\n    addToCurrent = (symbol) => {\n        //console.log(symbol);\n        if ([\"/\", \"+\", \"-\", \"*\"].indexOf(symbol) > -1 && nextIsReset == false) {\n            let { previous } = this.state;\n            previous.push(this.state.result + symbol);\n            this.setState({ previous, nextIsReset: true });\n\n        } else {\n            if (this.state.result === \"0\" && symbol !== \".\") {\n                this.setState({ result: symbol });\n            } else {\n                this.setState({ result: this.state.result + symbol });\n                this.setState({ nextIsReset: true })\n            }\n\n        }\n    }\n\n    render() {\n        const buttons = [\n            { symbol: 'C', cols: 3, action: this.reset },\n            { symbol: '/', cols: 1, action: this.addToCurrent },\n            { symbol: '7', cols: 1, action: this.addToCurrent },\n            { symbol: '8', cols: 1, action: this.addToCurrent },\n            { symbol: '9', cols: 1, action: this.addToCurrent },\n            { symbol: '*', cols: 1, action: this.addToCurrent },\n            { symbol: '4', cols: 1, action: this.addToCurrent },\n            { symbol: '5', cols: 1, action: this.addToCurrent },\n            { symbol: '6', cols: 1, action: this.addToCurrent },\n            { symbol: '-', cols: 1, action: this.addToCurrent },\n            { symbol: '1', cols: 1, action: this.addToCurrent },\n            { symbol: '2', cols: 1, action: this.addToCurrent },\n            { symbol: '3', cols: 1, action: this.addToCurrent },\n            { symbol: '+', cols: 1, action: this.addToCurrent },\n            { symbol: '0', cols: 2, action: this.addToCurrent },\n            { symbol: '.', cols: 1, action: this.addToCurrent },\n            { symbol: '=', cols: 1, action: this.addToCurrent }\n        ];\n        return ( <\n                div className = \"App\" > {\n                    this.state.previous.length > 0 ?\n                    <\n                    input className = \"previous\"\n                    type = \"text\"\n                    value = { this.state.previous[this.state.previous.length - 1] }\n                    /> :\n                    null\n                } <\n                input className = \"result\"\n                type = \"text\"\n                value = { this.state.result }\n                /> {\n                buttons.map((btn, i) => {\n                    return <Buttons key = { i }\n                    symbol = { btn.symbol }\n                    cols = { btn.cols }\n                    action = {\n                        (symbol) => btn.action(symbol)\n                    }\n                    />\n                })\n            } <\n            /div>\n    )\n\n}\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}