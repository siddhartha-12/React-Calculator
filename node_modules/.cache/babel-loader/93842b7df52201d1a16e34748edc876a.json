{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/siddhartha/sid/projects/react/calculator/src/App.js\";\nimport React, { Component } from 'react';\nimport Buttons from \"./components/Buttons\";\nimport './css/style.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reset = () => {\n      this.setState({\n        result: '0',\n        previous: '0'\n      });\n    };\n\n    this.addToCurrent = symbol => {\n      //console.log(symbol);\n      if ([\"/\", \"+\", \"-\", \"*\"].indexOf(symbol) > -1 && this.state.nextIsReset === false) {\n        let {\n          previous\n        } = this.state;\n\n        if (previous === \"0\") {\n          previous = this.state.result + symbol;\n        } else {\n          previous = previous + this.state.result + symbol;\n        }\n\n        this.setState({\n          previous,\n          nextIsReset: true\n        });\n      } else {\n        if (this.state.result === \"0\" && symbol !== \".\" || this.state.nextIsReset) {\n          this.setState({\n            result: symbol,\n            nextIsReset: false\n          });\n        } else {\n          this.setState({\n            result: this.state.result + symbol\n          });\n        }\n      }\n    };\n\n    this.calculate = () => {\n      let {\n        result\n      } = this.state;\n      result = String(eval(this.state.previous + result));\n      this.setState({\n        result\n      });\n    };\n\n    this.state = {\n      result: '0',\n      previous: '0',\n      nextIsReset: false\n    };\n  }\n\n  render() {\n    const buttons = [{\n      symbol: 'C',\n      cols: 3,\n      action: this.reset\n    }, {\n      symbol: '/',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '7',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '8',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '9',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '*',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '4',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '5',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '6',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '-',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '1',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '2',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '3',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '+',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '0',\n      cols: 2,\n      action: this.addToCurrent\n    }, {\n      symbol: '.',\n      cols: 1,\n      action: this.addToCurrent\n    }, {\n      symbol: '=',\n      cols: 1,\n      action: this.calculate\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [this.state.previous !== \"0\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"previous\",\n        type: \"text\",\n        value: this.state.previous\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 46\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"result\",\n        type: \"text\",\n        value: this.state.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), buttons.map((btn, i) => {\n        return /*#__PURE__*/_jsxDEV(Buttons, {\n          symbol: btn.symbol,\n          cols: btn.cols,\n          action: symbol => btn.action(symbol)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 51\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/siddhartha/sid/projects/react/calculator/src/App.js"],"names":["React","Component","Buttons","App","constructor","props","reset","setState","result","previous","addToCurrent","symbol","indexOf","state","nextIsReset","calculate","String","eval","render","buttons","cols","action","map","btn","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Buttons from \"./components/Buttons\"\nimport './css/style.css'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: '0',\n            previous: '0',\n            nextIsReset: false\n        }\n\n    }\n\n    reset = () => {\n        this.setState({ result: '0', previous: '0' });\n    }\n\n    addToCurrent = (symbol) => {\n        //console.log(symbol);\n        if ([\"/\", \"+\", \"-\", \"*\"].indexOf(symbol) > -1 && this.state.nextIsReset === false) {\n            let { previous } = this.state;\n            if(previous===\"0\")\n            {\n                previous = (this.state.result + symbol);\n            }else\n            {\n            previous = (previous + this.state.result + symbol);\n            }\n            this.setState({ previous, nextIsReset: true });\n\n        } else {\n            if ((this.state.result === \"0\" && symbol !== \".\") || this.state.nextIsReset) {\n                this.setState({ result: symbol, nextIsReset: false });\n            } else {\n                this.setState({ result: this.state.result + symbol });\n            }\n\n        }\n    }\n\n    calculate = () => {\n        let { result } = this.state;\n        result = String(eval(this.state.previous + result));\n        this.setState({result});\n    }\n\n    render() {\n        const buttons = [\n            { symbol: 'C', cols: 3, action: this.reset },\n            { symbol: '/', cols: 1, action: this.addToCurrent },\n            { symbol: '7', cols: 1, action: this.addToCurrent },\n            { symbol: '8', cols: 1, action: this.addToCurrent },\n            { symbol: '9', cols: 1, action: this.addToCurrent },\n            { symbol: '*', cols: 1, action: this.addToCurrent },\n            { symbol: '4', cols: 1, action: this.addToCurrent },\n            { symbol: '5', cols: 1, action: this.addToCurrent },\n            { symbol: '6', cols: 1, action: this.addToCurrent },\n            { symbol: '-', cols: 1, action: this.addToCurrent },\n            { symbol: '1', cols: 1, action: this.addToCurrent },\n            { symbol: '2', cols: 1, action: this.addToCurrent },\n            { symbol: '3', cols: 1, action: this.addToCurrent },\n            { symbol: '+', cols: 1, action: this.addToCurrent },\n            { symbol: '0', cols: 2, action: this.addToCurrent },\n            { symbol: '.', cols: 1, action: this.addToCurrent },\n            { symbol: '=', cols: 1, action: this.calculate }\n        ];\n        return (\n            <div className=\"App\" >\n                {this.state.previous!==\"0\" ? <input className=\"previous\" type=\"text\" value={this.state.previous} /> : null}\n                <input className=\"result\" type=\"text\" value={this.state.result} />\n                {buttons.map((btn, i) => { return <Buttons key={i} symbol={btn.symbol} cols={btn.cols} action={(symbol) => btn.action(symbol)} /> })}\n            </div>\n        )\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}